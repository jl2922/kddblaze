%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.2 (Build 18C54) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 332 176
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 332 176
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: FLDLQG+RobotoMono-Regular
%!FontType1-1.0: FLDLQG+RobotoMono-Regular 1.0000.2.0010
14 dict begin/FontName /FLDLQG+RobotoMono-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /U put
dup 34 /s put
dup 35 /e put
dup 36 /r put
dup 37 /space put
dup 38 /P put
dup 39 /o put
dup 40 /g put
dup 41 /a put
dup 42 /m put
dup 43 /B put
dup 44 /l put
dup 45 /z put
dup 46 /C put
dup 47 /p put
dup 48 /u put
dup 49 /t put
dup 50 /i put
dup 51 /n put
dup 52 /K put
dup 53 /M put
dup 54 /R put
dup 55 /d put
dup 56 /c put
dup 57 /D put
dup 58 /b put
dup 59 /y put
dup 60 /F put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1019 1 index div -555 2 index div 1945 3 index div 2163 5 -1 roll div]cvx def
/sfnts [<

2CB1000F435558B10F0F43B0016142B00F2B59B00043B0022542B10C022542B10D022542B001162320B003255058B101004360B00425428A8A208A2361B00E2A2123B00161208A2361B00E2A211BB101004360B0022542B0022561B00E2A2159B00C4347B00D434760B0026220B0005058B040605966B0016320B00B4363B804006220B0005058B040605966B0016360B10000132344B00143B0003EB20101014360422DB0132C00B10002455458B00F23422045B00B2342B00A23B00460422060B00161B5101001000E0042428A60B112062BB0752B1B22592DB0142CB100132B2DB0152CB101132B2DB0162CB102132B2DB0172CB103132B2DB0182CB104132B2DB0192CB105132B2DB01A2CB106132B2DB01B2CB107132B2DB01C2CB108132B2DB01D2CB109132B2DB0292C202EB0015D2DB02A2C202EB001712DB02B2C202EB001722DB01E2C00B00D2BB10002455458B00F23422045B00B2342B00A23B00460422060B00161B5101001000E0042428A60B112062BB0752B1B22592DB01F2CB1001E2B2DB0202CB1011E2B2DB0212CB1021E2B2DB0222CB1031E2B2DB0232CB1041E2B2DB0242CB1051E2B2DB0252CB1061E2B2DB0262CB1071E2B2DB0272CB1081E2B2DB0282CB1091E2B2DB02C2C203CB001602DB02D2C2060B01060204323B0016043B0022561B00160B02C2A212DB02E2CB02D2BB02D2A2DB02F2C2020472020B00B4363B804006220B0005058B040605966B001636023613823208A555820472020B00B4363B804006220B0005058B040605966B00163602361381B21592DB0302C00B10002455458B00116B02F2AB1050115455830591B22592DB0312C00B00D2BB10002455458B00116B02F2AB1050115455830591B22592DB0322C2035B001602DB0332C00B0014563B804006220B0005058B040605966B00163B0012BB00B4363B804006220B0005058B040605966B00163B0012BB00016B40000000000443E2338B13201152A2DB0342C203C204720B00B4363B804006220B0005058B040605966B0016360B0004361382DB0352C2E173C2DB0362C203C204720B00B4363B804006220B0005058B040605966B0016360B0004361B0014363382DB0372CB102001625202E2047B0002342B00225498A8A47234723612058621B2159B0012342B236010115142A2DB0382CB00016B00425B004254723472361B009432B658A2E2320203C8A382DB0392CB00016B00425B00425202E472347236120B0042342B009432B20B060505820B0405158B3022003201BB30226031A5942422320B00843208A234723472361234660B00443B0026220B0005058B040605966B001636020B0012B208A8A6120B00243606423B0034361645058B00243611BB003436059B00325B0026220B0005058B040605966B0016361232020B0042623







00>] def
/CharStrings 33 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/B 3 def
/C 4 def
/D 5 def
/F 6 def
/K 7 def
/M 8 def
/P 9 def
/R 10 def
/U 11 def
/a 12 def
/b 13 def
/c 14 def
/d 15 def
/e 16 def
/g 17 def
/i 18 def
/l 19 def
/m 20 def
/n 21 def
/o 22 def
/p 23 def
/r 24 def
/s 25 def
/t 26 def
/u 27 def
/y 28 def
/z 29 def
/breve 30 def
/uni0418 31 def
/uni048A 32 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1019 -555 1945 2163}def
/UniqueID 4362022 def
currentdict currentfile eexec


D72D67EA28198409F70AA6ED912BE8A318B8FBA08A69F12472B5CE0B5FE6EBEF82AF22E7F6F59AB471A7BD01F7C0756CCDA8BDA9DBD78FE6FD24205A0EB64EE6DEDC2D4C56E4B9C04BF50EA4E66DD6076B1661D797F47BFCF98738CFEF44A336D119740CA614A28C19D682E90C5C34D1297A843935278DCA36B65641280A5145EE143F666C4D7BCDECCCC72A263AF6803B8CBAA17B0DDE478C2AE3349D2C647636EA2B6E5E21A9065B60DA5BFB6FAE79A4976CA5BFD41BD123DADF9109A93496E991F0FC7B19DA7D7479C81D1E56D9894546C49D649E9B3450D8E16F361661ADD6EC0B784B883F7C116DD2451DC8A6529670122E5288C4655E0B7B32D22BF195243E19096E3B33666AD8363C84674192226522F45D8C4594AEE26DF5BC2EB574110E59DED00119B1C2098D5A92FD022C18618610B35F88A61C6ECDF2F00417DC127926E38F17CC7D17E882E7A910C0A72FD22B6109C71F627D9DDC24200708082D21533ED08D4F76EB6018EF097F5FC5573727EC211246AFA7710962CA2D42DE55C6C7AFDC0776718A1CB1064B4785222139797A7947538EF97E0F3902421395598EED4C63CE308AD0DFDD11590F85AD94C7DFA8E9EA6350F9277AE9A7C1F915A5EA5C0434B1B689BA72E4AE57E14055F7188C53772C626252971358E6D2E8A4404A4E1F5ABE349957FB098ABF56E0302092277F0F307A4E0795279F5A7E277F33FC25A3E58D6F6F675E9C2D588368F9999B95C0E763FC49B6EF09A8522A7FB21559F627EBB44804266F04E099522D3FC4D49CA28412AB76DF351314B00EFA96B8607CD170953D3DE62460A980BF3977398243EC354FB42537A8A4FCBE1B5445A958B11D8BCE0D64F6837425E3E226BF49420651133F516064E80E18A95539326799E696CA654D401B6A6707E49083917C76D2A56C31A0CB0A3F1CE41B0EE5CCC8DB0D8866E3386BB2128DCE84C94B8AA47197DA9EC1760884F2D1B4929455E0A51B1AF1004747CAF24B34EDD057696B1F02FC1B867BCC1CB0F793186A686DF2ED4E20055F8352A969CF3CED02D37538F6BB3983D44A382A15AEC77F4A4C34B5A4348B254CE47ECBCAA1F4A23F985136310375E6AA5B5258CFFE85F1A31C174E8800E0753F637CB46E42442EDF7B9DE40F63F189443281A4EB763950C567AF8D7945D4F5E902E55DD8F413C310662326376607E47F2B0EFD37D0EBDA2A03EB25915B83A5042C3218C772C47A03DE4EE947BEC45120B255666BD3089EE6F18809CE18273F1F01B24232537289D0B5479054CEDA14D7971E41DF937E70BD853FC3EAA1CFF356E66A8B7E276A6C3F99811A41AF8BA90FCAB63EE693472D347DD899496CED91475B8254FAC51F8E2289F01EF27C15A3B194CFBE2A105DD5334270E0C072030856007626E9BA1841F4E6504A047D83906DB70DCF98CD3260A460EACF


1BF4FBC3366B616E1FF8EE2B4D7BA7F93C36CD67FEF135D37657A7D3A2A898870AA1D21D59960FBE394357E8DB9747EBAD5381C10810D573AA20E7C2EEFC4FD27D12CDE01B7FBC641331DBE9DADBC9B49624C95B7BB970351BDA5C41D03B8CD1608F86DCB182FE4253068416CF9DAE34AFFAD93BBD233CA25F1754BAEFC5E3789588CA71A1A10DBBE7284B7B6CF11F254ED3A7C17C0169B7CC69AAC84A7E10A02D6AB40737761F1B0F422ABE0FE0A02AA9871048DCF4A9E616016C717B6280F60D7DAE4ED09D3D4F02ABCC79B5D64CA740C0E981FE4DCD067640B1ADB89B539E3B98C8636A9777109FF3049D695FFC2A236BD3F46361958C2DB2BEF4B1842B2D7C64AE8FEF0CBEA32BE72CF8F10180DD4B1513B836ADA0FDFFD3DA2748D2B4AFFB1BC3BC6D1F10223899BC4F47A5755EB963EF9830CBF6011B7B4CEE793B889B6158B59B3F69FD9D425940DA0BE9E933ECD4DDF978A5C27F348430B59BAE7A65302087856AE4040F632BA9462F6A90247B2580F293A35B2C67A3ACBEE24BF9AF6CD1B07B383585481863E1BF183500E36ED1B4F3197C224898E5A4224510030718CDED89934296FFFF9C30BAD6114B5233721F537F4F77121B639AC3F05A6C3B0A527D99AD9B2DF7DA90AE5D7A233724BB5805502710DDF0E42CF72F351A8411A0A2EFE0CD4157263D201871DCBA58DA7F4637CACE90986B19A631415CB0B7DD994A98192FC1FFFE96FDC6181850AE1C428DF46A9DC950EF61DACF7B7D372D19000E677ED51A6FEF31A23E78BCD7AF68C4FA4500E06C7200347BEC2AA71B30CE0F76E8A391B2A4E053718B027BCED0984C15DCD35D73DAF3D6AD287233B60B8C985A7B3FC6807D511348001942DE006EEE2280E601DC704012078D9A03CC1516E856C4FA617051DB96FB633098B60F227C3681B70EDA213F1B9CC1EFE9E5DE4A0E63522687EF65042516D4DC003D3D8B8FF35148ABAF4DB3E61F8F66DB68F579E5F6EFAD0C00362F6833026878E5D9090D512C88273A2C0217CBDB6BBFE040070A395DC65381F50F9280078697506A4E499CB7610587F7FD96E53C274723C5D07EEC45B73E43C278CBB124D3DE84729B4333D8F5C1C176515AF796BB8C6B1D328ACF640B60858A1952C019CB55FD05CB889807D43BB114135B19ED7E6E15169B0937A2C95857735130F5CCB943F8DB590476CD0B4C83117B862CB397F0E355BA4C544E1D114E4F0C5B715AD4D2ED447D55662AF958D8BAC5ECB93C3E78609C042F9C373B7D4597952988AB601E696E65B2239E91D1D495386B75B850CD18902AF3A7D84E254C3D27AF76A9305D3587F2367C219528F78E9C00A2349353BAF1A9846A5120AA84EFF4A353C5F086CC9F19A5B05676545A0A8B0735393FE620EBED3ECB6309DF69FDD20CF1524D738EB821F82A8A501374B0B6278D47A6B1F0850F
BEF574982628234FAAD6AD17571D12506FC71FBE9E1D32F8F3A396E7BB6BCB031C7DFCC58C9B3CC325DF0BE054CB7FB641A8EA314676389B0E47F96297E68A6011F3FAB7A9E6A7D654A2B70F86E9447FFA08A4674AE0F5DE6A477E37692B5F08D4B35F817BECA0B7389B3953E69D688D3AA4A96A68A4AF9D73B559727ECC2E622891A0016E14ADBA88F46AB28E913F294F4A9877E9E47A907B6860F9BD74832236AF1FEE854B4B300770B8E7D7AEE5B31DCD9A0C9E736DE66296122E3C58F6874707E6E87D081BA71906B373C41A136128E7A77FC5779CAC034E634E0832A189B451078D6557F07C9CE9724F2D142094D133D78F560CC14B4C22117ECEEBB997571BDABD4BC1DF6E385D1F5A28D05099EB43347E7FC7E7945639EC44D09913930F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/FLDLQG+RobotoMono-Regular cguidfix
/F1.1/FLDLQG+RobotoMono-Regular renmfont
%RBIBeginFontSubset: SGKKEE+Roboto-Regular
%!FontType1-1.0: SGKKEE+Roboto-Regular 1.0000.1.0000
14 dict begin/FontName /SGKKEE+Roboto-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /a put
dup 35 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -980 1 index div -555 2 index div 2396 3 index div 2167 5 -1 roll div]cvx def
/sfnts [<

37B166A9B1FBD7D6746A5F77BC0206EBBAB8E00C10FDEE6BAC1ADD778F5A314B264E69AD989BAF6B5F6F61440676C4BBB0FDF73A6C34906E47B07851485400000002008FFE600429044E0011001F005500B0004558B00E2F1BB10E0A3E59B0004558B00A2F1BB10A0A3E59B0004558B0072F1BB107083E59B0004558B0032F1BB103063E59B00E10B11502B00A2B5821D81BF459B00310B11C02B00A2B5821D81BF45930310114022322262711231133173E013332121123342623220607111E01333236350429E0C5649735C5971F359E69C9DFC5918D5578252578578C9001F4EAFEE14343FDEF05DA8C4E52FEC1FEFAB8ED4D43FDF5434BCDA20000010044FE5001D300390013002900B0004558B00D2F1BB10D083E59B10602B00A2B5821D81BF459B00D10B013B00A2B58D81BDC593031210E0115141633323637170E01232226353436370184464F2D331B2E1A2124573C5F79797F345F362A300F0B7B13196E635090380000010089FFEF0474048D0011003600B0004558B0002F1BB1000E3E59B0004558B0082F1BB1080E3E59B0004558B0042F1BB104063E59B10D02B00A2B5821D81BF45930310111140423222435113311141633323635110474FEE9DFDDFEE8C4A98889A9048DFD01C3DCDCC302FFFD017B8C8B7C02FF000000FFFF0089FE500474048D022600050000000700040176000000010000000100003B5300AD5F0F3CF50019080000000000CC47B83300000000CCAACAFDFC2CFDD5095C0877000000090002000000000000000100000862FDD50000097AFC2CFF3F095C00010000000000000000000000000000000701FD0000070700B40466006A048C008F02320044050400890504008900000000006A00E20140017601B201BE00010000000700970016005F0005000100000000000C00000200029B00030001B8000B2BB800002B00BA0001000500022B00BF0001005D004C003B0027001A000000082BBF00020049003C002F00220013000000082BBF00030049003C002F00220013000000082BBF00040038002E0024001A000F000000082BBF000500510042003400250016000000082B00BA0006000800072BB8000020457D691844BA00D00008000173BA00200008000174BA00300008000173BA00800008000173BA00700008000173BA005F000A000173BA007F000A000173BA002F000A000174BA004F000A000174BA006F000A000174BA008F000A000174BA00AF000A000174BA007F000A000175BA00FF000A000174BA001F000A000175BA003F000A000175BA005F000A000175BA003F000A000173BA000F000C000173BA007F000C000173BA00EF000C000173BA001F000C000174BA005F000C000174BA008F000C000174BA00CF000C000174BA00FF000C000174BA003F000C000175BA006F000C000175BA00

00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/M 1 def
/a 2 def
/p 3 def
/ogonek 4 def
/U.smcp 5 def
/Uogonek.smcp 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-980 -555 2396 2167}def
/UniqueID 4196781 def
currentdict currentfile eexec

819AF3923A5738427AA830AA1BDE97E9FEE353161D95D17C464255E7FF5BF4C4D31F64241C6658D54D6880CEA3B6B7B6D12D1EBFFC504C01D97EC61A04CC7B30E8507250D462E249FC47E86858F5198B3693BF2405BF3A16709BA7D5D23EA79392698E27F2FEBB324E6177E0ABB8895547367DE01BE553C1767F9BCE0B21F989F1BC49F63303EE44ADC070CC7C31BA8A52D02D3BBB6FC6EAEA25BF30E1575539D8E168BF9A360406B876BB87AC9CBC5BA092F3629BB2E9ECBC930D5EC8EAF6A628D65846ABBD93309D982BD7DA428565E31F6B27028EECAA730E39232E54C33CE8CF2D227EC59BB9D7FF6AA2F4BBA27C6DE99DB0D070F179C8FDE96D736602AFF590E6D8653C9E32632BA848ED03A5121D6D0A6A951DEAC937C83FAA249C6F101A72B0381B6D82483383CF8B08DE4E049CA3CEF36C30387526FC342C0A8546612C8406F7C6765CE4EFC1AE0E9177B39DE4FDEBB33E341169B48B4307919FD1C810B7133CD360E641A5F60BF349125902705B3BFB1A437B3AE0408D46779902DBABF573D5562D37A1FA4B6924F5DD1F4680D83B6054A45D82EE9FB8A82A82867CE7F644BBB7A4A270C03121B3DF4662ED33544822B4D4C1FC757BA7DC7635A9666F022D5E6D75C7E3585DA8137865382EE8E6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/SGKKEE+Roboto-Regular cguidfix
/F2.1/SGKKEE+Roboto-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
1 J
0.60000002 i
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
q
36 133 m
36 113 l
78 113 l
78 133 l
h
W
36 113 42 20 rc
0 -1 1 0 50.5 132 cm
0 6.5 m
16.947205 6.5 l
S
Q
q
36 133 m
36 113 l
78 113 l
78 133 l
h
W
56.269749 114.6977 m
56.673779 113.66871 57.330456 113.67281 57.732872 114.6977 c
59.906429 120.23336 l
60.310463 121.26236 59.848732 121.67366 58.883221 121.15636 c
58.755367 121.08787 l
57.786236 120.56863 56.211647 120.57057 55.246513 121.08787 c
55.11871 121.15636 l
54.149956 121.6756 53.693771 121.25825 54.096188 120.23336 c
56.269749 114.6977 l
h
W*
36 113 42 20 rc
48.949932 126.37984 m
48.949932 108.9275 l
65.052818 108.9275 l
65.052818 126.37984 l
h
f
Q
q
145 133 m
145 113 l
187 113 l
187 133 l
h
W
145 113 42 20 rc
0 -1 1 0 159.5 132 cm
0 6.5 m
16.947205 6.5 l
S
Q
q
145 133 m
145 113 l
187 113 l
187 133 l
h
W
165.26974 114.6977 m
165.67378 113.66871 166.33046 113.67281 166.73288 114.6977 c
168.90643 120.23336 l
169.31046 121.26236 168.84874 121.67366 167.88322 121.15636 c
167.75537 121.08787 l
166.78624 120.56863 165.21164 120.57057 164.24652 121.08787 c
164.11871 121.15636 l
163.14996 121.6756 162.69377 121.25825 163.09619 120.23336 c
165.26974 114.6977 l
h
W*
145 113 42 20 rc
157.94994 126.37984 m
157.94994 108.9275 l
174.05281 108.9275 l
174.05281 126.37984 l
h
f
Q
q
254 64 m
254 44 l
296 44 l
296 64 l
h
W
254 44 42 20 rc
0 -1 1 0 268.5 63 cm
0 6.5 m
16.947205 6.5 l
S
Q
q
254 64 m
254 44 l
296 44 l
296 64 l
h
W
274.26974 45.697701 m
274.67377 44.668705 275.33044 44.672817 275.73288 45.697701 c
277.90643 51.233364 l
278.31046 52.262356 277.84872 52.673656 276.88321 52.156364 c
276.75537 52.087864 l
275.78622 51.56863 274.21164 51.570572 273.24652 52.087864 c
273.11871 52.156364 l
272.14996 52.675598 271.69379 52.258247 272.09619 51.233364 c
274.26974 45.697701 l
h
W*
254 44 42 20 rc
266.94992 57.379837 m
266.94992 39.927494 l
283.05283 39.927494 l
283.05283 57.379837 l
h
f
Q
q
254 133 m
254 113 l
296 113 l
296 133 l
h
W
254 113 42 20 rc
0 -1 1 0 268.5 132 cm
0 6.5 m
16.947205 6.5 l
S
Q
q
254 133 m
254 113 l
296 113 l
296 133 l
h
W
274.26974 114.6977 m
274.67377 113.66871 275.33044 113.67281 275.73288 114.6977 c
277.90643 120.23336 l
278.31046 121.26236 277.84872 121.67366 276.88321 121.15636 c
276.75537 121.08787 l
275.78622 120.56863 274.21164 120.57057 273.24652 121.08787 c
273.11871 121.15636 l
272.14996 121.6756 271.69379 121.25825 272.09619 120.23336 c
274.26974 114.6977 l
h
W*
254 113 42 20 rc
266.94992 126.37984 m
266.94992 108.9275 l
283.05283 108.9275 l
283.05283 126.37984 l
h
f
Q
q
145 64 m
145 44 l
187 44 l
187 64 l
h
W
145 44 42 20 rc
0 -1 1 0 159.5 63 cm
0 6.5 m
16.947205 6.5 l
S
Q
q
145 64 m
145 44 l
187 44 l
187 64 l
h
W
165.26974 45.697701 m
165.67378 44.668705 166.33046 44.672817 166.73288 45.697701 c
168.90643 51.233364 l
169.31046 52.262356 168.84874 52.673656 167.88322 52.156364 c
167.75537 52.087864 l
166.78624 51.56863 165.21164 51.570572 164.24652 52.087864 c
164.11871 52.156364 l
163.14996 52.675598 162.69377 52.258247 163.09619 51.233364 c
165.26974 45.697701 l
h
W*
145 44 42 20 rc
157.94994 57.379837 m
157.94994 39.927494 l
174.05281 39.927494 l
174.05281 57.379837 l
h
f
Q
q
36 64 m
36 44 l
78 44 l
78 64 l
h
W
36 44 42 20 rc
0 -1 1 0 50.5 63 cm
0 6.5 m
16.947205 6.5 l
S
Q
q
36 64 m
36 44 l
78 44 l
78 64 l
h
W
56.269749 45.697701 m
56.673779 44.668705 57.330456 44.672817 57.732872 45.697701 c
59.906429 51.233364 l
60.310463 52.262356 59.848732 52.673656 58.883221 52.156364 c
58.755367 52.087864 l
57.786236 51.56863 56.211647 51.570572 55.246513 52.087864 c
55.11871 52.156364 l
54.149956 52.675598 53.693771 52.258247 54.096188 51.233364 c
56.269749 45.697701 l
h
W*
36 44 42 20 rc
48.949932 57.379837 m
48.949932 39.927494 l
65.052818 39.927494 l
65.052818 57.379837 l
h
f
Q
q
100 66 m
100 110 l
121 110 l
121 66 l
h
W
100.5 66.5 m
120.5 66.5 l
120.5 109.5 l
100.5 109.5 l
h
W
0 0 332 176 rc
1 0 0 1 101.5 81 cm
0 7 m
16.947205 7 l
S
Q
q
100 66 m
100 110 l
121 110 l
121 66 l
h
W
100.5 66.5 m
120.5 66.5 l
120.5 109.5 l
100.5 109.5 l
h
W
118.8023 87.269745 m
119.83129 87.673775 119.82719 88.330452 118.8023 88.732872 c
113.26664 90.906433 l
112.23764 91.310463 111.82634 90.848732 112.34364 89.883224 c
112.41213 89.755371 l
112.93137 88.786232 112.92943 87.211647 112.41213 86.246513 c
112.34364 86.118713 l
111.8244 85.149956 112.24175 84.693771 113.26664 85.096191 c
118.8023 87.269745 l
h
W*
0 0 332 176 rc
107.12016 79.949928 m
124.5725 79.949928 l
124.5725 96.052818 l
107.12016 96.052818 l
h
f
Q
q
232 66 m
232 110 l
211 110 l
211 66 l
h
W
231.5 66.5 m
211.5 66.5 l
211.5 109.5 l
231.5 109.5 l
h
W
0 0 332 176 rc
-1 0 0 1 230.5 81 cm
0 7 m
16.947205 7 l
S
Q
q
232 66 m
232 110 l
211 110 l
211 66 l
h
W
231.5 66.5 m
211.5 66.5 l
211.5 109.5 l
231.5 109.5 l
h
W
213.19769 87.269745 m
212.1687 87.673775 212.17282 88.330452 213.19769 88.732872 c
218.73337 90.906433 l
219.76236 91.310463 220.17366 90.848732 219.65637 89.883224 c
219.58786 89.755371 l
219.06863 88.786232 219.07057 87.211647 219.58786 86.246513 c
219.65637 86.118713 l
220.1756 85.149956 219.75824 84.693771 218.73337 85.096191 c
213.19769 87.269745 l
h
W*
0 0 332 176 rc
224.87984 79.949928 m
207.42749 79.949928 l
207.42749 96.052818 l
224.87984 96.052818 l
h
f
Q
0.98039216 0.83529413 0.42745098 sc
q
-7.5 185.5 m
339.5 185.5 l
339.5 111.5 l
-7.5 111.5 l
h
16 164.5 m
316 164.5 l
317.38071 164.5 318.5 163.38071 318.5 162 c
318.5 135 l
318.5 133.61929 317.38071 132.5 316 132.5 c
16 132.5 l
14.619288 132.5 13.5 133.61929 13.5 135 c
13.5 162 l
13.5 163.38071 14.619288 164.5 16 164.5 c
h
16 165.5 m
14.067003 165.5 12.5 163.933 12.5 162 c
12.5 135 l
12.5 133.067 14.067003 131.5 16 131.5 c
316 131.5 l
317.93298 131.5 319.5 133.067 319.5 135 c
319.5 162 l
319.5 163.933 317.93298 165.5 316 165.5 c
16 165.5 l
h
W*
16 165 m
316 165 l
317.65686 165 319 163.65686 319 162 c
319 135 l
319 133.34314 317.65686 132 316 132 c
16 132 l
14.343145 132 13 133.34314 13 135 c
13 162 l
13 163.65686 14.343145 165 16 165 c
h
W*
0 0 332 176 rc
16 165 m
316 165 l
317.65686 165 319 163.65686 319 162 c
319 135 l
319 133.34314 317.65686 132 316 132 c
16 132 l
14.343145 132 13 133.34314 13 135 c
13 162 l
13 163.65686 14.343145 165 16 165 c
h
f
Q
2 w
0 J
0 0 0 sc
q
16 165 m
316 165 l
317.65686 165 319 163.65686 319 162 c
319 135 l
319 133.34314 317.65686 132 316 132 c
16 132 l
14.343145 132 13 133.34314 13 135 c
13 162 l
13 163.65686 14.343145 165 16 165 c
h
W*
0 0 332 176 rc
1 0 0 -1 13 165 cm
3 0 m
303 0 l
304.65686 0 306 1.3431457 306 3 c
306 30 l
306 31.656855 304.65686 33 303 33 c
3 33 l
1.3431457 33 0 31.656855 0 30 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
0.58039218 0.80392158 0.85882354 sc
q
-7.5 65.5 m
339.5 65.5 l
339.5 -8.5 l
-7.5 -8.5 l
h
16 44.5 m
316 44.5 l
317.38071 44.5 318.5 43.380711 318.5 42 c
318.5 15 l
318.5 13.619288 317.38071 12.5 316 12.5 c
16 12.5 l
14.619288 12.5 13.5 13.619288 13.5 15 c
13.5 42 l
13.5 43.380711 14.619288 44.5 16 44.5 c
h
16 45.5 m
14.067003 45.5 12.5 43.932995 12.5 42 c
12.5 15 l
12.5 13.067003 14.067003 11.5 16 11.5 c
316 11.5 l
317.93298 11.5 319.5 13.067003 319.5 15 c
319.5 42 l
319.5 43.932995 317.93298 45.5 316 45.5 c
16 45.5 l
h
W*
16 45 m
316 45 l
317.65686 45 319 43.656853 319 42 c
319 15 l
319 13.343145 317.65686 12 316 12 c
16 12 l
14.343145 12 13 13.343145 13 15 c
13 42 l
13 43.656853 14.343145 45 16 45 c
h
W*
0 0 332 176 rc
16 45 m
316 45 l
317.65686 45 319 43.656853 319 42 c
319 15 l
319 13.343145 317.65686 12 316 12 c
16 12 l
14.343145 12 13 13.343145 13 15 c
13 42 l
13 43.656853 14.343145 45 16 45 c
h
f
Q
0 0 0 sc
q
16 45 m
316 45 l
317.65686 45 319 43.656853 319 42 c
319 15 l
319 13.343145 317.65686 12 316 12 c
16 12 l
14.343145 12 13 13.343145 13 15 c
13 42 l
13 43.656853 14.343145 45 16 45 c
h
W*
0 0 332 176 rc
1 0 0 -1 13 45 cm
3 0 m
303 0 l
304.65686 0 306 1.3431457 306 3 c
306 30 l
306 31.656855 304.65686 33 303 33 c
3 33 l
1.3431457 33 0 31.656855 0 30 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 176 rc
1 0 0 -1 94 158 cm
/F1.1[ 12 0 0 -12 0 0]sf
29.842968 13 m
(!"#$%&$'\($\))[ 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
107.95586 13 m
(*)s
1 0 0 -1 22 38 cm
34.381836 13 m
(+,\)-#%&\)$\),,#,%.'*/0123\(%4#$3#)[ 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
247.41699 13 m
(,)s
Q
q
16 114 m
98 114 l
99.656853 114 101 112.65685 101 111 c
101 66 l
101 64.343147 99.656853 63 98 63 c
16 63 l
14.343145 63 13 64.343147 13 66 c
13 111 l
13 112.65685 14.343145 114 16 114 c
h
W*
0 0 332 176 rc
1 0 0 -1 13 114 cm
3 0 m
85 0 l
86.656853 0 88 1.3431457 88 3 c
88 48 l
88 49.656853 86.656853 51 85 51 c
3 51 l
1.3431457 51 0 49.656853 0 48 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 176 rc
1 0 0 -1 42 100 cm
/F2.1[ 13 0 0 -13 0 0]sf
0 14 m
(!"#)[ 11.581934 7.309961 0.000000 ] xS
Q
0.76862746 0.83529413 0.63529414 sc
q
-7.5 134.5 m
121.5 134.5 l
121.5 42.5 l
-7.5 42.5 l
h
16 113.5 m
98 113.5 l
99.380714 113.5 100.5 112.38071 100.5 111 c
100.5 66 l
100.5 64.619286 99.380714 63.5 98 63.5 c
16 63.5 l
14.619288 63.5 13.5 64.619286 13.5 66 c
13.5 111 l
13.5 112.38071 14.619288 113.5 16 113.5 c
h
16 114.5 m
14.067003 114.5 12.5 112.933 12.5 111 c
12.5 66 l
12.5 64.067001 14.067003 62.5 16 62.5 c
98 62.5 l
99.932999 62.5 101.5 64.067001 101.5 66 c
101.5 111 l
101.5 112.933 99.932999 114.5 98 114.5 c
16 114.5 l
h
W*
16 114 m
98 114 l
99.656853 114 101 112.65685 101 111 c
101 66 l
101 64.343147 99.656853 63 98 63 c
16 63 l
14.343145 63 13 64.343147 13 66 c
13 111 l
13 112.65685 14.343145 114 16 114 c
h
W*
0 0 332 176 rc
16 114 m
98 114 l
99.656853 114 101 112.65685 101 111 c
101 66 l
101 64.343147 99.656853 63 98 63 c
16 63 l
14.343145 63 13 64.343147 13 66 c
13 111 l
13 112.65685 14.343145 114 16 114 c
h
f
Q
0 0 0 sc
q
16 114 m
98 114 l
99.656853 114 101 112.65685 101 111 c
101 66 l
101 64.343147 99.656853 63 98 63 c
16 63 l
14.343145 63 13 64.343147 13 66 c
13 111 l
13 112.65685 14.343145 114 16 114 c
h
W*
0 0 332 176 rc
1 0 0 -1 13 114 cm
3 0 m
85 0 l
86.656853 0 88 1.3431457 88 3 c
88 48 l
88 49.656853 86.656853 51 85 51 c
3 51 l
1.3431457 51 0 49.656853 0 48 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 176 rc
1 0 0 -1 13 106 cm
/F1.1[ 12 0 0 -12 0 0]sf
26.24707 13 m
(+,\)-#)[ 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
11.994726 29 m
(5\)/6#708)[ 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
68.8041 29 m
(#)s
Q
q
123 114 m
209 114 l
210.65686 114 212 112.65685 212 111 c
212 66 l
212 64.343147 210.65686 63 209 63 c
123 63 l
121.34315 63 120 64.343147 120 66 c
120 111 l
120 112.65685 121.34315 114 123 114 c
h
W*
0 0 332 176 rc
1 0 0 -1 120 114 cm
3 0 m
89 0 l
90.656853 0 92 1.3431457 92 3 c
92 48 l
92 49.656853 90.656853 51 89 51 c
3 51 l
1.3431457 51 0 49.656853 0 48 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 176 rc
1 0 0 -1 151 99 cm
/F2.1[ 13 0 0 -13 0 0]sf
0 14 m
(!"#)[ 11.581934 7.309961 0.000000 ] xS
Q
0.76862746 0.83529413 0.63529414 sc
q
99.5 134.5 m
232.5 134.5 l
232.5 42.5 l
99.5 42.5 l
h
123 113.5 m
209 113.5 l
210.38071 113.5 211.5 112.38071 211.5 111 c
211.5 66 l
211.5 64.619286 210.38071 63.5 209 63.5 c
123 63.5 l
121.61929 63.5 120.5 64.619286 120.5 66 c
120.5 111 l
120.5 112.38071 121.61929 113.5 123 113.5 c
h
123 114.5 m
121.067 114.5 119.5 112.933 119.5 111 c
119.5 66 l
119.5 64.067001 121.067 62.5 123 62.5 c
209 62.5 l
210.933 62.5 212.5 64.067001 212.5 66 c
212.5 111 l
212.5 112.933 210.933 114.5 209 114.5 c
123 114.5 l
h
W*
123 114 m
209 114 l
210.65686 114 212 112.65685 212 111 c
212 66 l
212 64.343147 210.65686 63 209 63 c
123 63 l
121.34315 63 120 64.343147 120 66 c
120 111 l
120 112.65685 121.34315 114 123 114 c
h
W*
0 0 332 176 rc
123 114 m
209 114 l
210.65686 114 212 112.65685 212 111 c
212 66 l
212 64.343147 210.65686 63 209 63 c
123 63 l
121.34315 63 120 64.343147 120 66 c
120 111 l
120 112.65685 121.34315 114 123 114 c
h
f
Q
0 0 0 sc
q
123 114 m
209 114 l
210.65686 114 212 112.65685 212 111 c
212 66 l
212 64.343147 210.65686 63 209 63 c
123 63 l
121.34315 63 120 64.343147 120 66 c
120 111 l
120 112.65685 121.34315 114 123 114 c
h
W*
0 0 332 176 rc
1 0 0 -1 120 114 cm
3 0 m
89 0 l
90.656853 0 92 1.3431457 92 3 c
92 48 l
92 49.656853 90.656853 51 89 51 c
3 51 l
1.3431457 51 0 49.656853 0 48 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 176 rc
1 0 0 -1 120 106 cm
/F1.1[ 12 0 0 -12 0 0]sf
6.9435549 13 m
(92"1$2:01#7)[ 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
10.44414 29 m
(.'31\)23#$)[ 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
74.354691 29 m
(")s
Q
q
234 114 m
316 114 l
317.65686 114 319 112.65685 319 111 c
319 66 l
319 64.343147 317.65686 63 316 63 c
234 63 l
232.34314 63 231 64.343147 231 66 c
231 111 l
231 112.65685 232.34314 114 234 114 c
h
W*
0 0 332 176 rc
1 0 0 -1 231 114 cm
3 0 m
85 0 l
86.656853 0 88 1.3431457 88 3 c
88 48 l
88 49.656853 86.656853 51 85 51 c
3 51 l
1.3431457 51 0 49.656853 0 48 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 176 rc
1 0 0 -1 260 99 cm
/F2.1[ 13 0 0 -13 0 0]sf
0 14 m
(!"#)[ 11.581934 7.309961 0.000000 ] xS
Q
0.76862746 0.83529413 0.63529414 sc
q
210.5 134.5 m
339.5 134.5 l
339.5 42.5 l
210.5 42.5 l
h
234 113.5 m
316 113.5 l
317.38071 113.5 318.5 112.38071 318.5 111 c
318.5 66 l
318.5 64.619286 317.38071 63.5 316 63.5 c
234 63.5 l
232.61929 63.5 231.5 64.619286 231.5 66 c
231.5 111 l
231.5 112.38071 232.61929 113.5 234 113.5 c
h
234 114.5 m
232.067 114.5 230.5 112.933 230.5 111 c
230.5 66 l
230.5 64.067001 232.067 62.5 234 62.5 c
316 62.5 l
317.93298 62.5 319.5 64.067001 319.5 66 c
319.5 111 l
319.5 112.933 317.93298 114.5 316 114.5 c
234 114.5 l
h
W*
234 114 m
316 114 l
317.65686 114 319 112.65685 319 111 c
319 66 l
319 64.343147 317.65686 63 316 63 c
234 63 l
232.34314 63 231 64.343147 231 66 c
231 111 l
231 112.65685 232.34314 114 234 114 c
h
W*
0 0 332 176 rc
234 114 m
316 114 l
317.65686 114 319 112.65685 319 111 c
319 66 l
319 64.343147 317.65686 63 316 63 c
234 63 l
232.34314 63 231 64.343147 231 66 c
231 111 l
231 112.65685 232.34314 114 234 114 c
h
f
Q
0 0 0 sc
q
234 114 m
316 114 l
317.65686 114 319 112.65685 319 111 c
319 66 l
319 64.343147 317.65686 63 316 63 c
234 63 l
232.34314 63 231 64.343147 231 66 c
231 111 l
231 112.65685 232.34314 114 234 114 c
h
W*
0 0 332 176 rc
1 0 0 -1 231 114 cm
3 0 m
85 0 l
86.656853 0 88 1.3431457 88 3 c
88 48 l
88 49.656853 86.656853 51 85 51 c
3 51 l
1.3431457 51 0 49.656853 0 48 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 176 rc
1 0 0 -1 231 106 cm
/F1.1[ 12 0 0 -12 0 0]sf
19.145899 13 m
(!12,21;)[ 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
11.994726 29 m
(<03812'3)[ 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
68.8041 29 m
(")s
ep
end
