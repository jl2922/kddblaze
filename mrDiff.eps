%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.2 (Build 18C54) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 332 242
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 332 242
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: SGKKEE+Roboto-Regular
%!FontType1-1.0: SGKKEE+Roboto-Regular 1.0000.1.0000
14 dict begin/FontName /SGKKEE+Roboto-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /a put
dup 35 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -980 1 index div -555 2 index div 2396 3 index div 2167 5 -1 roll div]cvx def
/sfnts [<

37B166A9B1FBD7D6746A5F77BC0206EBBAB8E00C10FDEE6BAC1ADD778F5A314B264E69AD989BAF6B5F6F61440676C4BBB0FDF73A6C34906E47B07851485400000002008FFE600429044E0011001F005500B0004558B00E2F1BB10E0A3E59B0004558B00A2F1BB10A0A3E59B0004558B0072F1BB107083E59B0004558B0032F1BB103063E59B00E10B11502B00A2B5821D81BF459B00310B11C02B00A2B5821D81BF45930310114022322262711231133173E013332121123342623220607111E01333236350429E0C5649735C5971F359E69C9DFC5918D5578252578578C9001F4EAFEE14343FDEF05DA8C4E52FEC1FEFAB8ED4D43FDF5434BCDA20000010044FE5001D300390013002900B0004558B00D2F1BB10D083E59B10602B00A2B5821D81BF459B00D10B013B00A2B58D81BDC593031210E0115141633323637170E01232226353436370184464F2D331B2E1A2124573C5F79797F345F362A300F0B7B13196E635090380000010089FFEF0474048D0011003600B0004558B0002F1BB1000E3E59B0004558B0082F1BB1080E3E59B0004558B0042F1BB104063E59B10D02B00A2B5821D81BF45930310111140423222435113311141633323635110474FEE9DFDDFEE8C4A98889A9048DFD01C3DCDCC302FFFD017B8C8B7C02FF000000FFFF0089FE500474048D022600050000000700040176000000010000000100003B5300AD5F0F3CF50019080000000000CC47B83300000000CCAACAFDFC2CFDD5095C0877000000090002000000000000000100000862FDD50000097AFC2CFF3F095C00010000000000000000000000000000000701FD0000070700B40466006A048C008F02320044050400890504008900000000006A00E20140017601B201BE00010000000700970016005F0005000100000000000C00000200029B00030001B8000B2BB800002B00BA0001000500022B00BF0001005D004C003B0027001A000000082BBF00020049003C002F00220013000000082BBF00030049003C002F00220013000000082BBF00040038002E0024001A000F000000082BBF000500510042003400250016000000082B00BA0006000800072BB8000020457D691844BA00D00008000173BA00200008000174BA00300008000173BA00800008000173BA00700008000173BA005F000A000173BA007F000A000173BA002F000A000174BA004F000A000174BA006F000A000174BA008F000A000174BA00AF000A000174BA007F000A000175BA00FF000A000174BA001F000A000175BA003F000A000175BA005F000A000175BA003F000A000173BA000F000C000173BA007F000C000173BA00EF000C000173BA001F000C000174BA005F000C000174BA008F000C000174BA00CF000C000174BA00FF000C000174BA003F000C000175BA006F000C000175BA00

00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/M 1 def
/a 2 def
/p 3 def
/ogonek 4 def
/U.smcp 5 def
/Uogonek.smcp 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-980 -555 2396 2167}def
/UniqueID 4196781 def
currentdict currentfile eexec

819AF3923A5738427AA830AA1BDE97E9FEE353161D95D17C464255E7FF5BF4C4D31F64241C6658D54D6880CEA3B6B7B6D12D1EBFFC504C01D97EC61A04CC7B30E8507250D462E249FC47E86858F5198B3693BF2405BF3A16709BA7D5D23EA79392698E27F2FEBB324E6177E0ABB8895547367DE01BE553C1767F9BCE0B21F989F1BC49F63303EE44ADC070CC7C31BA8A52D02D3BBB6FC6EAEA25BF30E1575539D8E168BF9A360406B876BB87AC9CBC5BA092F3629BB2E9ECBC930D5EC8EAF6A628D65846ABBD93309D982BD7DA428565E31F6B27028EECAA730E39232E54C33CE8CF2D227EC59BB9D7FF6AA2F4BBA27C6DE99DB0D070F179C8FDE96D736602AFF590E6D8653C9E32632BA848ED03A5121D6D0A6A951DEAC937C83FAA249C6F101A72B0381B6D82483383CF8B08DE4E049CA3CEF36C30387526FC342C0A8546612C8406F7C6765CE4EFC1AE0E9177B39DE4FDEBB33E341169B48B4307919FD1C810B7133CD360E641A5F60BF349125902705B3BFB1A437B3AE0408D46779902DBABF573D5562D37A1FA4B6924F5DD1F4680D83B6054A45D82EE9FB8A82A82867CE7F644BBB7A4A270C03121B3DF4662ED33544822B4D4C1FC757BA7DC7635A9666F022D5E6D75C7E3585DA8137865382EE8E6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/SGKKEE+Roboto-Regular cguidfix
/F1.1/SGKKEE+Roboto-Regular renmfont
%RBIBeginFontSubset: DRXBDJ+RobotoMono-Regular
%!FontType1-1.0: DRXBDJ+RobotoMono-Regular 1.0000.2.0010
14 dict begin/FontName /DRXBDJ+RobotoMono-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /a put
dup 35 /p put
dup 36 /S put
dup 37 /h put
dup 38 /u put
dup 39 /f put
dup 40 /l put
dup 41 /e put
dup 42 /R put
dup 43 /d put
dup 44 /c put
dup 45 /O put
dup 46 /r put
dup 47 /i put
dup 48 /g put
dup 49 /n put
dup 50 /space put
dup 51 /B put
dup 52 /z put
dup 53 /t put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1019 1 index div -555 2 index div 1945 3 index div 2163 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 26 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/B 3 def
/M 4 def
/O 5 def
/R 6 def
/S 7 def
/a 8 def
/c 9 def
/d 10 def
/e 11 def
/f 12 def
/g 13 def
/h 14 def
/i 15 def
/l 16 def
/n 17 def
/p 18 def
/r 19 def
/t 20 def
/u 21 def
/z 22 def
/breve 23 def
/uni0418 24 def
/uni048A 25 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1019 -555 1945 2163}def
/UniqueID 4362022 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55B973E53DD63E3402312E78CA82D3D310082892C837CA3B2707F89CB543707461FE4A7E4676C87FA5EF6808F73CBE8BA440C5760C3CEE69F0F61C18258C4321EB46A62BD2D357D203533365D737AF4C54E707C74AC83378083862E6B822A020E4BF288AF22403D07242C4936E95281212FC9DCCC7C9EAB2EF1EDB2DDA04073C0FD7023701A434BB42959FB21E460DADCA953C2820FDAEAAED95508FEF32A369758A431B2FC78E1E029DF5A535AF82336000746D707839C438F17E1EAC35002909398604CAC2D99D5744D37C29A1BECCEF3AAC3FA67680F72D4E4319283B317B1BDD9C22D85D4991ED92441E84FE96FEA457CFAAF38589A03DA9B8CE2ECAFFF61C7E6E7867F6818543159755D9F5A4B1B6AC60DFD1A617A1A6D806A4C8C221136D60DCF2AA3D765EBF46E05574CEFB10B1E7A309C019CD808CCC9D51F194AB4BF268E8ECE67E8A20158FD482240B62643EBEC42497AF94C624491A267B89F8AE8401FEF8941768AA87D8CB043BD965F062EE476B414B99A1C491F5B0A93E567511E12BAA041EFE8B87E3AE7E8FA2BCCBC8C20424378B817722A07F751A2927A70A0EAB65A1EA1933297192A216D8C943FD57FC0B3D3314258406C703CCAB1F39688651DEACC95568A06C869B3CFC7C1DD41D3981DCAB6A56FB68281CDC6BCB7D3D5625A4A9C43DE3709BBE273386724BEEF299FEA8431A5BBD158D4B722EE229FBB749086217CBD92359907B50CBD36309156E96FC0D78AF558B85E988FBE1579FA78629CE6AB91E6993B3963FA4796F76B132802DEA0B684AA9D980C5EC8AAFA28DC39
992CD333F146FAC9D2C9D245F53CD0174FD1CE7E5A660F630481F53E38F0A57F183D78997CE4C32461D6FB75908A2E0D93A826290B839EC52154DB259019644D39D8EF803DDFF85A7B4B831DABF6F6A85FED0ED121B389AFFC03979BCAA9EF302FCABDBEDBC0D3168844FB825B3EF4C9DAFA770AC9D5120BC1B03EFEB392E981E3C0AAF680933BE7BEC98B6D1D109E5C96942F26E171EEA7C4FCAEC498DEC689CBC555C5DCAC43E3F33FD98402734B202D514204E7182E00B9830A782465B228D2F81BE5C5C4EA0E5060ABDCD2A8C668927651457A722815C063E40F34AB55ADEC7E2A400CB65BF6B6C51D51C3849978C70CECE9FC2F4E903969724E5BF34F85557E496FF2CC8F2E47D413E984F12B16001BD4693CA9E63A5134307437822E95065AE25D6F62D5891BE98A088042329965F0683B9D48638EE011D8A6198C485CA12E422238265358D59A69297416B5BD77FC6E10ECFE533A870EE5A20E66C85CE195709E4F3DD8D589F47058B8CCE4A71E6860859CD01145D7FE8AFBDFF2FBAF00A75C19FC140F385CA510F817BA1FE3A625FE009E8D5F553C44953BFEA863B07AC3FBB3334CB93534ACDFEE6C7F8988459F28913A507614748D25D11A40FCD797CD3001FBC3725A558BF001BA89D1B021BAC956C4A89A50B49A0BC6D93A9535036814249CF4EF7FE30772B37D3BE04A1A251B2B4791219A6F8439CF7B497D9EAD7CFD0B84ED2BD53B7A983249C49EFB6B92B3C9607BD4D070C10EC7F041C3E2ABADBB70C65642046660C102CBAA750126E39031DCF40D43FECFB5AFD3ED489DB9886321261D86C00AAF58B42616479B2F7076B149FDD48EE81F51C872F688F2175EDDBDE14F7B438B61BE9ED9A8BF6063D115E69D3CAA12A85E9598DB3B470A2500E656330BBCEAFC6B6A9490B09FF910045F89BEA4FB73B54DFE6EDEB17149E6B932D08764BA3D7A0ADCBD55E03E0CF0CF2834C0B7811FE317101C9F6258B5FFA6C16FC4F5A00E1E0A95C489ED31E82DF3DA877431AE09824EA8FBC415E88ADD3BFE52FCE48D7EFB344DE7C31C90D1F4CAAC49D0912A7AD508B0C806F3D6070BEE9BBF113BACED0A97E7E6607A2E78E1668641D3C2BD5076F0652B958D8E6E64D59A606008B8BDD9939B71B8BA924CF38420EBD277E6893F7B132E2493434BA837963FA8203A82D5CA7ED957FD0BA9CB1A5F678A3795831D25A76A33738D366B1A8AB6009623E018D7555DAB1BEBEA62E0CFA9C66067C73CC70D4DB6663C797840D1251042A69CCFF2A91B28A0F780F6257BE72DFE4F5F71291EF08313B08432322B8C3DF02CBAE246D5E104C76F59BC2C116A1F993B150F54CAD00C28374678797B3943B7E7BCCBAF50A085CEB55FD768CC578846832726532BAA4C57AA9EED9FA2F00B9640B743F173A105F4755AADD6C521E0555A60EB4FD0585FADADE0
8A15A936AF359E3D9551A5420E78AA6D240C9D7C03ACBA3429282F046819A884C49117CCB95461BDEF2C700A92FB0B3F4CF075ECE7706B6C324A3A7C65447824539B3947FDAF0A9A577AC50AE938079B1FBF9B5FE7642BD0652955E1CF0B66341786DC2A1D7F5CDAC284539B6A1126321E281C9279DBEDAAC5DAAAD498A0059CC4FC6E01728D34FFB94400721AD5507A87B148277999122C10B99469601FA6CDA2F2F3F92AF1A4F4B2A1DEFEF3948B337C04896534AD13762E5982D00D4D0605028C15F2BBA2CF2EBB5BFFF0B7D1C3F577834621FD4D65F1DB9E7F9E513A0A3116FD77561148D51158AAD7F9137CD7F75A8C330E45F50C591D506439D7977E4CE213F123D83A19ADB4A8512C458ECCF920FCB15DDE7324202553C9E38AC56986C03E974021DE739E07D8C5BDEB7933528C8ADC594B728E91B5884152A9081F2A3E417A5830F21232664823EE655F833C2E6D0537DA5D6A7DC6B7D05AB6D9FE0A3CA83C8EDBC4DA96E5B9BB20E0615F5A6F3BA0E28ABF09A1E8E3B034714719FA4A108DBC94D4EAF99117F969C03517A7F9A60E9F1725A478C87BACC4DF91E3B65DC0209203DB82AECEDD5264B4CD19A3B9DC2A4F5A6B12D4506FA0C4D8ACB8E25AB90F15B9F64EBC31A7803BE80685688D1DCEF2C387BC008C5735F1D94B73A1FC7D5667AD3CD19A635AC925397CBFB20EAAC541F0F264BFA936574C3ABE417052106979C66BC454D92042E0F29440C8FCE31D6CC6DE2F99A238263DF2FFAC8CB23A5C855ABBD2B80DF0D0601DA663466CDD5B51694F336D77C53C5FE323DE56B6B41225BEA67C4F719C0B77B87EB289EA61F6CC537C943E05C116F759231311DA1B0ABF0F3F0EEBBDE4398CC3D48D58F28997A67CCFC54A4AF853A5F939CFBA9757F662BBB1B0857669524B6AE6B45053DCDC5AF7BC1118BB39D1D68AC208619AE5323B8B45DF2D4883A67A14ED73FFA23311F383DCA0AA97CB0878CB5368AD8FA9E88F439E7DA7D36F7851DF798FB5BEF3C51EA4ECC04AD7B28FD063224877243430ABFCB4D6015756DA57B3AF22F18F06AC8D0994F111EF955D81023073C650D65B2DB23E4B5AA50AFBB544D3C179BDFCDF480356EFFD1BAC039738E420E0562C568F6CF3D3C6C30F76BA4F399F79AFA918BE0FDE868CF26126D19FF22934CDB6F8A86AFB9D9DB91A7F6674576D3479DC97C0A30AB3C1D8B9643469DFCCE28D171566A76D7D21B929CA13750E578FC91DB41776E0A9AEBBFC66252D01AE9C14DDE734219273C4D8977287F3138692391E8B7586A3AD953D5D65B2387D2CE17228A37F3BD24B284C2FEFC9B17C1E0B4620954AB8211659F3272D603584485A776C81D96F00EE1F6432BBDE19E2F63472CB47B7AA65E83F85A7D73CCED48D836F0F03747F3A62B40BEC80FBC838FFB9FA2CD8B1C053048FDB9BDAE1D0C432D5


7B09DC31793C3A039215CD9DFDEFDCDC4E50A76F98F5AFA1F96C19ACB780808C3FD78EFE5B7826DFBF3919D92AFA893375934C04F0A1D784B58E2667E6EDCE477A93A0605645800956627FD77A3088C3CC5E9C4455346E41F062B26DB5709BC8AD356D2950AA055879208C61F18F08E5EF970B260BFA0508FE4E1BCF9CC2E88DDBBBB3BA2E8DFDA9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/DRXBDJ+RobotoMono-Regular cguidfix
/F2.1/DRXBDJ+RobotoMono-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
1 J
0.60000002 i
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
q
6 91 m
6 35 l
48 35 l
48 91 l
h
W
0 0 332 242 rc
0 -1 1 0 20.5 90 cm
0 6.5 m
52.835403 6.5 l
S
Q
q
6 91 m
6 35 l
48 35 l
48 91 l
h
W
26.269747 36.697701 m
26.673779 35.668705 27.330456 35.672817 27.732872 36.697701 c
29.906431 42.233364 l
30.310461 43.262356 29.848732 43.673656 28.883223 43.156364 c
28.755369 43.087864 l
27.786236 42.56863 26.211645 42.570572 25.246513 43.087864 c
25.11871 43.156364 l
24.149956 43.675598 23.693771 43.258247 24.096189 42.233364 c
26.269747 36.697701 l
h
W*
0 0 332 242 rc
18.94993 48.379837 m
18.94993 30.927494 l
35.052818 30.927494 l
35.052818 48.379837 l
h
f
Q
q
198 187 m
198 161 l
240 161 l
240 187 l
h
W
0 0 332 242 rc
0 -1 1 0 212.5 186 cm
0 6.5 m
22.928572 6.5 l
S
Q
q
198 187 m
198 161 l
240 161 l
240 187 l
h
W
218.26974 162.69769 m
218.67378 161.6687 219.33046 161.67282 219.73288 162.69769 c
221.90643 168.23337 l
222.31046 169.26236 221.84874 169.67366 220.88322 169.15637 c
220.75537 169.08786 l
219.78624 168.56863 218.21164 168.57057 217.24652 169.08786 c
217.11871 169.15637 l
216.14996 169.6756 215.69377 169.25824 216.09619 168.23337 c
218.26974 162.69769 l
h
W*
0 0 332 242 rc
210.94994 174.37984 m
210.94994 156.92749 l
227.05281 156.92749 l
227.05281 174.37984 l
h
f
Q
q
159 35 m
159 53 l
117 53 l
117 35 l
h
W
0 0 332 242 rc
0 1 -1 0 144.5 36 cm
0 6.5 m
14.953416 6.5 l
S
Q
q
159 35 m
159 53 l
117 53 l
117 35 l
h
W
138.73026 51.302299 m
138.32622 52.331295 137.66954 52.327183 137.26712 51.302299 c
135.09357 45.766636 l
134.68954 44.737644 135.15126 44.326344 136.11678 44.843636 c
136.24463 44.912136 l
137.21376 45.43137 138.78836 45.429428 139.75348 44.912136 c
139.88129 44.843636 l
140.85004 44.324402 141.30623 44.741753 140.90381 45.766636 c
138.73026 51.302299 l
h
W*
0 0 332 242 rc
146.05006 39.620163 m
146.05006 57.072506 l
129.94719 57.072506 l
129.94719 39.620163 l
h
f
Q
q
136 53 m
136 35 l
178 35 l
178 53 l
h
W
0 0 332 242 rc
0 -1 1 0 150.5 52 cm
0 6.5 m
14.953416 6.5 l
S
Q
q
136 53 m
136 35 l
178 35 l
178 53 l
h
W
156.26974 36.697701 m
156.67378 35.668705 157.33046 35.672817 157.73288 36.697701 c
159.90643 42.233364 l
160.31046 43.262356 159.84874 43.673656 158.88322 43.156364 c
158.75537 43.087864 l
157.78624 42.56863 156.21164 42.570572 155.24652 43.087864 c
155.11871 43.156364 l
154.14996 43.675598 153.69377 43.258247 154.09619 42.233364 c
156.26974 36.697701 l
h
W*
0 0 332 242 rc
148.94994 48.379837 m
148.94994 30.927494 l
165.05281 30.927494 l
165.05281 48.379837 l
h
f
Q
q
196 35 m
196 53 l
154 53 l
154 35 l
h
W
0 0 332 242 rc
0 1 -1 0 181.5 36 cm
0 6.5 m
14.953416 6.5 l
S
Q
q
196 35 m
196 53 l
154 53 l
154 35 l
h
W
175.73026 51.302299 m
175.32622 52.331295 174.66954 52.327183 174.26712 51.302299 c
172.09357 45.766636 l
171.68954 44.737644 172.15126 44.326344 173.11678 44.843636 c
173.24463 44.912136 l
174.21376 45.43137 175.78836 45.429428 176.75348 44.912136 c
176.88129 44.843636 l
177.85004 44.324402 178.30623 44.741753 177.90381 45.766636 c
175.73026 51.302299 l
h
W*
0 0 332 242 rc
183.05006 39.620163 m
183.05006 57.072506 l
166.94719 57.072506 l
166.94719 39.620163 l
h
f
Q
q
173 53 m
173 35 l
215 35 l
215 53 l
h
W
0 0 332 242 rc
0 -1 1 0 187.5 52 cm
0 6.5 m
14.953416 6.5 l
S
Q
q
173 53 m
173 35 l
215 35 l
215 53 l
h
W
193.26974 36.697701 m
193.67378 35.668705 194.33046 35.672817 194.73288 36.697701 c
196.90643 42.233364 l
197.31046 43.262356 196.84874 43.673656 195.88322 43.156364 c
195.75537 43.087864 l
194.78624 42.56863 193.21164 42.570572 192.24652 43.087864 c
192.11871 43.156364 l
191.14996 43.675598 190.69377 43.258247 191.09619 42.233364 c
193.26974 36.697701 l
h
W*
0 0 332 242 rc
185.94994 48.379837 m
185.94994 30.927494 l
202.05281 30.927494 l
202.05281 48.379837 l
h
f
Q
q
30 91 m
30 35 l
72 35 l
72 91 l
h
W
0 0 332 242 rc
0 -1 1 0 44.5 90 cm
0 6.5 m
52.835403 6.5 l
S
Q
q
30 91 m
30 35 l
72 35 l
72 91 l
h
W
50.269749 36.697701 m
50.673779 35.668705 51.330456 35.672817 51.732872 36.697701 c
53.906429 42.233364 l
54.310463 43.262356 53.848732 43.673656 52.883221 43.156364 c
52.755367 43.087864 l
51.786236 42.56863 50.211647 42.570572 49.246513 43.087864 c
49.11871 43.156364 l
48.149956 43.675598 47.693771 43.258247 48.096188 42.233364 c
50.269749 36.697701 l
h
W*
0 0 332 242 rc
42.949932 48.379837 m
42.949932 30.927494 l
59.052818 30.927494 l
59.052818 48.379837 l
h
f
Q
q
53 91 m
53 35 l
95 35 l
95 91 l
h
W
0 0 332 242 rc
0 -1 1 0 67.5 90 cm
0 6.5 m
52.835403 6.5 l
S
Q
q
53 91 m
53 35 l
95 35 l
95 91 l
h
W
73.269745 36.697701 m
73.673775 35.668705 74.330452 35.672817 74.732872 36.697701 c
76.906433 42.233364 l
77.310463 43.262356 76.848732 43.673656 75.883224 43.156364 c
75.755371 43.087864 l
74.786232 42.56863 73.211647 42.570572 72.246513 43.087864 c
72.118713 43.156364 l
71.149956 43.675598 70.693771 43.258247 71.096191 42.233364 c
73.269745 36.697701 l
h
W*
0 0 332 242 rc
65.949928 48.379837 m
65.949928 30.927494 l
82.052818 30.927494 l
82.052818 48.379837 l
h
f
Q
q
77 91 m
77 35 l
119 35 l
119 91 l
h
W
0 0 332 242 rc
0 -1 1 0 91.5 90 cm
0 6.5 m
52.835403 6.5 l
S
Q
q
77 91 m
77 35 l
119 35 l
119 91 l
h
W
97.269745 36.697701 m
97.673775 35.668705 98.330452 35.672817 98.732872 36.697701 c
100.90643 42.233364 l
101.31046 43.262356 100.84873 43.673656 99.883224 43.156364 c
99.755371 43.087864 l
98.786232 42.56863 97.211647 42.570572 96.246513 43.087864 c
96.118713 43.156364 l
95.149956 43.675598 94.693771 43.258247 95.096191 42.233364 c
97.269745 36.697701 l
h
W*
0 0 332 242 rc
89.949928 48.379837 m
89.949928 30.927494 l
106.05282 30.927494 l
106.05282 48.379837 l
h
f
Q
q
115 225 m
115 199 l
157 199 l
157 225 l
h
W
0 0 332 242 rc
0 -1 1 0 129.5 224 cm
0 6.5 m
22.928572 6.5 l
S
Q
q
115 225 m
115 199 l
157 199 l
157 225 l
h
W
135.26974 200.69769 m
135.67378 199.6687 136.33046 199.67282 136.73288 200.69769 c
138.90643 206.23337 l
139.31046 207.26236 138.84874 207.67366 137.88322 207.15637 c
137.75537 207.08786 l
136.78624 206.56863 135.21164 206.57057 134.24652 207.08786 c
134.11871 207.15637 l
133.14996 207.6756 132.69377 207.25824 133.09619 206.23337 c
135.26974 200.69769 l
h
W*
0 0 332 242 rc
127.94993 212.37984 m
127.94993 194.92749 l
144.05281 194.92749 l
144.05281 212.37984 l
h
f
Q
2 J
[
3
3
] 0 d
0.59200001 0.59200001 0.59200001 sc
q
0 0 332 242 rc
1 0 0 -1 13 127 cm
0 1 m
307 1 l
S
[] 0 d
0.60000002 0.60000002 0.60000002 sc
1 0 0 -1 176 187 cm
0 0.5 m
43 0.5 l
S
1 0 0 -1 93 225 cm
0 0.5 m
43 0.5 l
S
Q
2 w
0 J
[] 0 d
0 0 0 sc
q
16 238 m
90 238 l
91.656853 238 93 236.65686 93 235 c
93 214 l
93 212.34314 91.656853 211 90 211 c
16 211 l
14.343145 211 13 212.34314 13 214 c
13 235 l
13 236.65686 14.343145 238 16 238 c
h
W*
0 0 332 242 rc
1 0 0 -1 13 238 cm
3 0 m
77 0 l
78.656853 0 80 1.3431457 80 3 c
80 24 l
80 25.656855 78.656853 27 77 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 40 235 cm
/F1.1[ 13 0 0 -13 0 0]sf
0 14 m
(!"#)[ 11.581934 7.309961 0.000000 ] xS
Q
0.58039218 0.80392158 0.85882354 sc
q
-7.5 258.5 m
113.5 258.5 l
113.5 190.5 l
-7.5 190.5 l
h
16 237.5 m
90 237.5 l
91.380714 237.5 92.5 236.38071 92.5 235 c
92.5 214 l
92.5 212.61929 91.380714 211.5 90 211.5 c
16 211.5 l
14.619288 211.5 13.5 212.61929 13.5 214 c
13.5 235 l
13.5 236.38071 14.619288 237.5 16 237.5 c
h
16 238.5 m
14.067003 238.5 12.5 236.933 12.5 235 c
12.5 214 l
12.5 212.067 14.067003 210.5 16 210.5 c
90 210.5 l
91.932999 210.5 93.5 212.067 93.5 214 c
93.5 235 l
93.5 236.933 91.932999 238.5 90 238.5 c
16 238.5 l
h
W*
16 238 m
90 238 l
91.656853 238 93 236.65686 93 235 c
93 214 l
93 212.34314 91.656853 211 90 211 c
16 211 l
14.343145 211 13 212.34314 13 214 c
13 235 l
13 236.65686 14.343145 238 16 238 c
h
W*
0 0 332 242 rc
16 238 m
90 238 l
91.656853 238 93 236.65686 93 235 c
93 214 l
93 212.34314 91.656853 211 90 211 c
16 211 l
14.343145 211 13 212.34314 13 214 c
13 235 l
13 236.65686 14.343145 238 16 238 c
h
f
Q
0 0 0 sc
q
16 238 m
90 238 l
91.656853 238 93 236.65686 93 235 c
93 214 l
93 212.34314 91.656853 211 90 211 c
16 211 l
14.343145 211 13 212.34314 13 214 c
13 235 l
13 236.65686 14.343145 238 16 238 c
h
W*
0 0 332 242 rc
1 0 0 -1 13 238 cm
3 0 m
77 0 l
78.656853 0 80 1.3431457 80 3 c
80 24 l
80 25.656855 78.656853 27 77 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 42.5 234 cm
/F2.1[ 12 0 0 -12 0 0]sf
0.29824218 13 m
(!")[ 7.101172 0.000000 ] xS
14.500586 13 m
(#)s
Q
q
16 117 m
90 117 l
91.656853 117 93 115.65685 93 114 c
93 93 l
93 91.343147 91.656853 90 90 90 c
16 90 l
14.343145 90 13 91.343147 13 93 c
13 114 l
13 115.65685 14.343145 117 16 117 c
h
W*
0 0 332 242 rc
1 0 0 -1 13 117 cm
3 0 m
77 0 l
78.656853 0 80 1.3431457 80 3 c
80 24 l
80 25.656855 78.656853 27 77 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 40 114 cm
/F1.1[ 13 0 0 -13 0 0]sf
0 14 m
(!"#)[ 11.581934 7.309961 0.000000 ] xS
Q
0.58039218 0.80392158 0.85882354 sc
q
-7.5 137.5 m
133.5 137.5 l
133.5 69.5 l
-7.5 69.5 l
h
16 116.5 m
110 116.5 l
111.38071 116.5 112.5 115.38071 112.5 114 c
112.5 93 l
112.5 91.619286 111.38071 90.5 110 90.5 c
16 90.5 l
14.619288 90.5 13.5 91.619286 13.5 93 c
13.5 114 l
13.5 115.38071 14.619288 116.5 16 116.5 c
h
16 117.5 m
14.067003 117.5 12.5 115.933 12.5 114 c
12.5 93 l
12.5 91.067001 14.067003 89.5 16 89.5 c
110 89.5 l
111.933 89.5 113.5 91.067001 113.5 93 c
113.5 114 l
113.5 115.933 111.933 117.5 110 117.5 c
16 117.5 l
h
W*
16 117 m
110 117 l
111.65685 117 113 115.65685 113 114 c
113 93 l
113 91.343147 111.65685 90 110 90 c
16 90 l
14.343145 90 13 91.343147 13 93 c
13 114 l
13 115.65685 14.343145 117 16 117 c
h
W*
0 0 332 242 rc
16 117 m
110 117 l
111.65685 117 113 115.65685 113 114 c
113 93 l
113 91.343147 111.65685 90 110 90 c
16 90 l
14.343145 90 13 91.343147 13 93 c
13 114 l
13 115.65685 14.343145 117 16 117 c
h
f
Q
0 0 0 sc
q
16 117 m
110 117 l
111.65685 117 113 115.65685 113 114 c
113 93 l
113 91.343147 111.65685 90 110 90 c
16 90 l
14.343145 90 13 91.343147 13 93 c
13 114 l
13 115.65685 14.343145 117 16 117 c
h
W*
0 0 332 242 rc
1 0 0 -1 13 117 cm
3 0 m
97 0 l
98.656853 0 100 1.3431457 100 3 c
100 24 l
100 25.656855 98.656853 27 97 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 52.5 113 cm
/F2.1[ 12 0 0 -12 0 0]sf
0.29824218 13 m
(!")[ 7.101172 0.000000 ] xS
14.500586 13 m
(#)s
Q
q
99 200 m
173 200 l
174.65686 200 176 198.65686 176 197 c
176 176 l
176 174.34314 174.65686 173 173 173 c
99 173 l
97.343147 173 96 174.34314 96 176 c
96 197 l
96 198.65686 97.343147 200 99 200 c
h
W*
0 0 332 242 rc
1 0 0 -1 96 200 cm
3 0 m
77 0 l
78.656853 0 80 1.3431457 80 3 c
80 24 l
80 25.656855 78.656853 27 77 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 123 197 cm
/F1.1[ 13 0 0 -13 0 0]sf
0 14 m
(!"#)[ 11.581934 7.309961 0.000000 ] xS
Q
0.76862746 0.83529413 0.63529414 sc
q
75.5 220.5 m
196.5 220.5 l
196.5 152.5 l
75.5 152.5 l
h
99 199.5 m
173 199.5 l
174.38071 199.5 175.5 198.38071 175.5 197 c
175.5 176 l
175.5 174.61929 174.38071 173.5 173 173.5 c
99 173.5 l
97.619286 173.5 96.5 174.61929 96.5 176 c
96.5 197 l
96.5 198.38071 97.619286 199.5 99 199.5 c
h
99 200.5 m
97.067001 200.5 95.5 198.933 95.5 197 c
95.5 176 l
95.5 174.067 97.067001 172.5 99 172.5 c
173 172.5 l
174.933 172.5 176.5 174.067 176.5 176 c
176.5 197 l
176.5 198.933 174.933 200.5 173 200.5 c
99 200.5 l
h
W*
99 200 m
173 200 l
174.65686 200 176 198.65686 176 197 c
176 176 l
176 174.34314 174.65686 173 173 173 c
99 173 l
97.343147 173 96 174.34314 96 176 c
96 197 l
96 198.65686 97.343147 200 99 200 c
h
W*
0 0 332 242 rc
99 200 m
173 200 l
174.65686 200 176 198.65686 176 197 c
176 176 l
176 174.34314 174.65686 173 173 173 c
99 173 l
97.343147 173 96 174.34314 96 176 c
96 197 l
96 198.65686 97.343147 200 99 200 c
h
f
Q
0 0 0 sc
q
99 200 m
173 200 l
174.65686 200 176 198.65686 176 197 c
176 176 l
176 174.34314 174.65686 173 173 173 c
99 173 l
97.343147 173 96 174.34314 96 176 c
96 197 l
96 198.65686 97.343147 200 99 200 c
h
W*
0 0 332 242 rc
1 0 0 -1 96 200 cm
3 0 m
77 0 l
78.656853 0 80 1.3431457 80 3 c
80 24 l
80 25.656855 78.656853 27 77 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 111.5 195.5 cm
/F2.1[ 12 0 0 -12 0 0]sf
0.090039067 13 m
($%&''\()[ 7.101172 7.101172 7.101172 7.107031 7.107031 0.000000 ] xS
42.70879 13 m
(\))s
Q
q
129 79 m
203 79 l
204.65686 79 206 77.656853 206 76 c
206 55 l
206 53.343147 204.65686 52 203 52 c
129 52 l
127.34315 52 126 53.343147 126 55 c
126 76 l
126 77.656853 127.34315 79 129 79 c
h
W*
0 0 332 242 rc
1 0 0 -1 126 79 cm
3 0 m
77 0 l
78.656853 0 80 1.3431457 80 3 c
80 24 l
80 25.656855 78.656853 27 77 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 153 76 cm
/F1.1[ 13 0 0 -13 0 0]sf
0 14 m
(!"#)[ 11.581934 7.309961 0.000000 ] xS
Q
0.76862746 0.83529413 0.63529414 sc
q
105.5 99.5 m
226.5 99.5 l
226.5 31.5 l
105.5 31.5 l
h
129 78.5 m
203 78.5 l
204.38071 78.5 205.5 77.380714 205.5 76 c
205.5 55 l
205.5 53.619289 204.38071 52.5 203 52.5 c
129 52.5 l
127.61929 52.5 126.5 53.619289 126.5 55 c
126.5 76 l
126.5 77.380714 127.61929 78.5 129 78.5 c
h
129 79.5 m
127.067 79.5 125.5 77.932999 125.5 76 c
125.5 55 l
125.5 53.067005 127.067 51.5 129 51.5 c
203 51.5 l
204.933 51.5 206.5 53.067005 206.5 55 c
206.5 76 l
206.5 77.932999 204.933 79.5 203 79.5 c
129 79.5 l
h
W*
129 79 m
203 79 l
204.65686 79 206 77.656853 206 76 c
206 55 l
206 53.343147 204.65686 52 203 52 c
129 52 l
127.34315 52 126 53.343147 126 55 c
126 76 l
126 77.656853 127.34315 79 129 79 c
h
W*
0 0 332 242 rc
129 79 m
203 79 l
204.65686 79 206 77.656853 206 76 c
206 55 l
206 53.343147 204.65686 52 203 52 c
129 52 l
127.34315 52 126 53.343147 126 55 c
126 76 l
126 77.656853 127.34315 79 129 79 c
h
f
Q
0 0 0 sc
q
129 79 m
203 79 l
204.65686 79 206 77.656853 206 76 c
206 55 l
206 53.343147 204.65686 52 203 52 c
129 52 l
127.34315 52 126 53.343147 126 55 c
126 76 l
126 77.656853 127.34315 79 129 79 c
h
W*
0 0 332 242 rc
1 0 0 -1 126 79 cm
3 0 m
77 0 l
78.656853 0 80 1.3431457 80 3 c
80 24 l
80 25.656855 78.656853 27 77 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 141.5 74.5 cm
/F2.1[ 12 0 0 -12 0 0]sf
0.090039067 13 m
($%&''\()[ 7.101172 7.101172 7.101172 7.107031 7.107031 0.000000 ] xS
42.70879 13 m
(\))s
Q
q
182 162 m
256 162 l
257.65686 162 259 160.65686 259 159 c
259 138 l
259 136.34314 257.65686 135 256 135 c
182 135 l
180.34314 135 179 136.34314 179 138 c
179 159 l
179 160.65686 180.34314 162 182 162 c
h
W*
0 0 332 242 rc
1 0 0 -1 179 162 cm
3 0 m
77 0 l
78.656853 0 80 1.3431457 80 3 c
80 24 l
80 25.656855 78.656853 27 77 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 206 159 cm
/F1.1[ 13 0 0 -13 0 0]sf
0 14 m
(!"#)[ 11.581934 7.309961 0.000000 ] xS
Q
0.98039216 0.83529413 0.42745098 sc
q
158.5 182.5 m
279.5 182.5 l
279.5 114.5 l
158.5 114.5 l
h
182 161.5 m
256 161.5 l
257.38071 161.5 258.5 160.38071 258.5 159 c
258.5 138 l
258.5 136.61929 257.38071 135.5 256 135.5 c
182 135.5 l
180.61929 135.5 179.5 136.61929 179.5 138 c
179.5 159 l
179.5 160.38071 180.61929 161.5 182 161.5 c
h
182 162.5 m
180.067 162.5 178.5 160.933 178.5 159 c
178.5 138 l
178.5 136.067 180.067 134.5 182 134.5 c
256 134.5 l
257.93298 134.5 259.5 136.067 259.5 138 c
259.5 159 l
259.5 160.933 257.93298 162.5 256 162.5 c
182 162.5 l
h
W*
182 162 m
256 162 l
257.65686 162 259 160.65686 259 159 c
259 138 l
259 136.34314 257.65686 135 256 135 c
182 135 l
180.34314 135 179 136.34314 179 138 c
179 159 l
179 160.65686 180.34314 162 182 162 c
h
W*
0 0 332 242 rc
182 162 m
256 162 l
257.65686 162 259 160.65686 259 159 c
259 138 l
259 136.34314 257.65686 135 256 135 c
182 135 l
180.34314 135 179 136.34314 179 138 c
179 159 l
179 160.65686 180.34314 162 182 162 c
h
f
Q
0 0 0 sc
q
182 162 m
256 162 l
257.65686 162 259 160.65686 259 159 c
259 138 l
259 136.34314 257.65686 135 256 135 c
182 135 l
180.34314 135 179 136.34314 179 138 c
179 159 l
179 160.65686 180.34314 162 182 162 c
h
W*
0 0 332 242 rc
1 0 0 -1 179 162 cm
3 0 m
77 0 l
78.656853 0 80 1.3431457 80 3 c
80 24 l
80 25.656855 78.656853 27 77 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 198 157.5 cm
/F2.1[ 12 0 0 -12 0 0]sf
0.14648438 13 m
(*\)+&,)[ 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
35.652344 13 m
(\))s
1 0 0 -1 83 33 cm
/F1.1[ 13 0 0 -13 0 0]sf
0 14 m
(!"#)[ 11.581934 7.309961 0.000000 ] xS
Q
0.98039216 0.83529413 0.42745098 sc
q
-7.5 56.5 m
230.5 56.5 l
230.5 -11.5 l
-7.5 -11.5 l
h
16 35.5 m
207 35.5 l
208.38071 35.5 209.5 34.380711 209.5 33 c
209.5 12 l
209.5 10.619288 208.38071 9.5 207 9.5 c
16 9.5 l
14.619288 9.5 13.5 10.619288 13.5 12 c
13.5 33 l
13.5 34.380711 14.619288 35.5 16 35.5 c
h
16 36.5 m
14.067003 36.5 12.5 34.932995 12.5 33 c
12.5 12 l
12.5 10.067003 14.067003 8.5 16 8.5 c
207 8.5 l
208.933 8.5 210.5 10.067003 210.5 12 c
210.5 33 l
210.5 34.932995 208.933 36.5 207 36.5 c
16 36.5 l
h
W*
16 36 m
207 36 l
208.65686 36 210 34.656853 210 33 c
210 12 l
210 10.343145 208.65686 9 207 9 c
16 9 l
14.343145 9 13 10.343145 13 12 c
13 33 l
13 34.656853 14.343145 36 16 36 c
h
W*
0 0 332 242 rc
16 36 m
207 36 l
208.65686 36 210 34.656853 210 33 c
210 12 l
210 10.343145 208.65686 9 207 9 c
16 9 l
14.343145 9 13 10.343145 13 12 c
13 33 l
13 34.656853 14.343145 36 16 36 c
h
f
Q
0 0 0 sc
q
16 36 m
207 36 l
208.65686 36 210 34.656853 210 33 c
210 12 l
210 10.343145 208.65686 9 207 9 c
16 9 l
14.343145 9 13 10.343145 13 12 c
13 33 l
13 34.656853 14.343145 36 16 36 c
h
W*
0 0 332 242 rc
1 0 0 -1 13 36 cm
3 0 m
194 0 l
195.65686 0 197 1.3431457 197 3 c
197 24 l
197 25.656855 195.65686 27 194 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 53 31.5 cm
/F2.1[ 12 0 0 -12 0 0]sf
37.646484 13 m
(*\)+&,)[ 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
73.152344 13 m
(\))s
1 0 0 -1 192 237 cm
0.078906275 13 m
(-./0/1"\(2!"#*\)+&,)[ 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
120.79883 13 m
(\))s
1 0 0 -1 213 114 cm
0 13 m
(3\("4\)2!"#*\)+&,)[ 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 7.101172 0.000000 ] xS
99.416405 13 m
(\))s
Q
0.84705883 0.58431375 0.56470591 sc
q
266.5 68.5 m
266.5 18.5 l
198.5 18.5 l
198.5 68.5 l
h
245.5 45 m
245.5 42 l
245.5 40.619289 244.38071 39.5 243 39.5 c
222 39.5 l
220.61929 39.5 219.5 40.619289 219.5 42 c
219.5 45 l
219.5 46.380711 220.61929 47.5 222 47.5 c
243 47.5 l
244.38071 47.5 245.5 46.380711 245.5 45 c
h
246.5 45 m
246.5 46.932995 244.933 48.5 243 48.5 c
222 48.5 l
220.067 48.5 218.5 46.932995 218.5 45 c
218.5 42 l
218.5 40.067005 220.067 38.5 222 38.5 c
243 38.5 l
244.933 38.5 246.5 40.067005 246.5 42 c
246.5 45 l
h
W*
246 45 m
246 42 l
246 40.343147 244.65686 39 243 39 c
222 39 l
220.34314 39 219 40.343147 219 42 c
219 45 l
219 46.656853 220.34314 48 222 48 c
243 48 l
244.65686 48 246 46.656853 246 45 c
h
W*
0 0 332 242 rc
246 45 m
246 42 l
246 40.343147 244.65686 39 243 39 c
222 39 l
220.34314 39 219 40.343147 219 42 c
219 45 l
219 46.656853 220.34314 48 222 48 c
243 48 l
244.65686 48 246 46.656853 246 45 c
h
f
Q
0 0 0 sc
q
246 45 m
246 42 l
246 40.343147 244.65686 39 243 39 c
222 39 l
220.34314 39 219 40.343147 219 42 c
219 45 l
219 46.656853 220.34314 48 222 48 c
243 48 l
244.65686 48 246 46.656853 246 45 c
h
W*
0 0 332 242 rc
0 -1 -1 0 246 48 cm
3 0 m
6 0 l
7.6568542 0 9 1.3431457 9 3 c
9 24 l
9 25.656855 7.6568542 27 6 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
Q
q
0 0 332 242 rc
1 0 0 -1 255 50 cm
/F2.1[ 9 0 0 -9 0 0]sf
0.26045316 9 m
(5%.\)"+2,",%)[ 5.310879 5.310879 5.310879 5.310879 5.310879 5.310879 5.310879 5.310879 5.310879 5.310879 0.000000 ] xS
58.680122 9 m
(\))s
Q
0.84705883 0.58431375 0.56470591 sc
q
49 99.5 m
99 99.5 l
99 31.5 l
49 31.5 l
h
72.5 78.5 m
75.5 78.5 l
76.880714 78.5 78 77.380714 78 76 c
78 55 l
78 53.619289 76.880714 52.5 75.5 52.5 c
72.5 52.5 l
71.119286 52.5 70 53.619289 70 55 c
70 76 l
70 77.380714 71.119286 78.5 72.5 78.5 c
h
72.5 79.5 m
70.567001 79.5 69 77.932999 69 76 c
69 55 l
69 53.067005 70.567001 51.5 72.5 51.5 c
75.5 51.5 l
77.432999 51.5 79 53.067005 79 55 c
79 76 l
79 77.932999 77.432999 79.5 75.5 79.5 c
72.5 79.5 l
h
W*
72.5 79 m
75.5 79 l
77.156853 79 78.5 77.656853 78.5 76 c
78.5 55 l
78.5 53.343147 77.156853 52 75.5 52 c
72.5 52 l
70.843147 52 69.5 53.343147 69.5 55 c
69.5 76 l
69.5 77.656853 70.843147 79 72.5 79 c
h
W*
0 0 332 242 rc
72.5 79 m
75.5 79 l
77.156853 79 78.5 77.656853 78.5 76 c
78.5 55 l
78.5 53.343147 77.156853 52 75.5 52 c
72.5 52 l
70.843147 52 69.5 53.343147 69.5 55 c
69.5 76 l
69.5 77.656853 70.843147 79 72.5 79 c
h
f
Q
0 0 0 sc
q
72.5 79 m
75.5 79 l
77.156853 79 78.5 77.656853 78.5 76 c
78.5 55 l
78.5 53.343147 77.156853 52 75.5 52 c
72.5 52 l
70.843147 52 69.5 53.343147 69.5 55 c
69.5 76 l
69.5 77.656853 70.843147 79 72.5 79 c
h
W*
0 0 332 242 rc
1 0 0 -1 69.5 79 cm
3 0 m
6 0 l
7.6568542 0 9 1.3431457 9 3 c
9 24 l
9 25.656855 7.6568542 27 6 27 c
3 27 l
1.3431457 27 0 25.656855 0 24 c
0 3 l
0 1.3431457 1.3431457 0 3 0 c
h
S
ep
end
